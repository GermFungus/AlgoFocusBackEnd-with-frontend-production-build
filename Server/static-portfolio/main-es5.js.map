{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Services/apiparser/apiparser.service.ts","webpack:///src/app/Services/registration/registration.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/main-module/main-module.component.html","webpack:///src/app/main-module/main-module.component.ts","webpack:///src/app/main-module/main-module.module.ts","webpack:///src/app/main-module/main-module.routing.ts","webpack:///src/app/views/common/footer/footer.component.ts","webpack:///src/app/views/common/footer/footer.component.html","webpack:///src/app/views/common/header/header.component.ts","webpack:///src/app/views/common/header/header.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ApiparserService","httpClient","Router","url","method","data","needRaw","headers","httpOptions","parse","pipe","reqPromise","reject","subscribe","res","response","status","navigate","error","providedIn","RegistrationService","parser","params","hit","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","MainModuleComponent","router","route","ApiParser","step","looper","counter","phoneState","ageRes","user","valid","userToSend","form","value","dob","Date","dp","year","month","day","today","age","getFullYear","getMonth","getDate","console","log","register","result","userDetails","fetchData","completeData","err","Object","push","MainModuleModule","path","component","MainModuleRoutingModule","forChild","FooterComponent","HeaderComponent","loggedIn","home","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders} from  '@angular/common/http';\nimport {Router} from \"@angular/router\";\nimport { timeout } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ApiparserService {\n  constructor(\n    private  httpClient:  HttpClient, private Router: Router\n  ) { }\n\n\n  hit(url, method, data, needRaw=false, headers=false){\n    url = \"https://algofocus-assignment.herokuapp.com\" + url;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n      })\n    };\n   \n    return this.parse(\n      this.httpClient[method](url, data, httpOptions).pipe(\n        timeout(60000)\n      ), needRaw, headers\n    );\n  }\n\n  private parse(reqPromise, needRaw, headers){\n    return new Promise((resolve, reject)=>{\n      reqPromise.subscribe(function(res){\n        let response = res ? (res.data || res) : res;\n        resolve(response);\n      }, (res)=>{\n        if(res && res.status === 401){\n          this.Router.navigate(['/']);\n        }\n        reject(res.error);\n      });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiparserService } from '../apiparser/apiparser.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegistrationService {\n\n\n  constructor(private parser: ApiparserService) { }\n\n  register(params){\n    return this.parser.hit('/user/register', 'post', {params: params});\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'frontEnd';\n}\n","<app-header></app-header>\r\n<router-outlet ></router-outlet>\r\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { MainModuleModule } from './main-module/main-module.module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport { HeaderComponent } from './views/common/header/header.component';\r\nimport { FooterComponent } from './views/common/footer/footer.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    MainModuleModule,\r\n    HttpClientModule,\r\n    NgbModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","\r\n<div class=\"home-main-container\">\r\n    <div class=\"developer_registartion\">\r\n     <div class=\"container\">\r\n       <div class=\"main-registration-part\" *ngIf=\"(step != 4)\">\r\n         <div class=\"heading-11\">\r\n           <h2>Join Offorms - Developer</h2>\r\n           <p>Submit your details for evaluation</p>\r\n         </div>\r\n         <div class=\"tab-section\">\r\n           <div class=\"Coloumn-gap\">\r\n             <div class=\"steps-details\">\r\n               <ul>\r\n                 <li *ngIf=\"(step == 1)\"><img src=\"assets/images/Head-Icon.png\" alt=\"\"></li>\r\n                 <li *ngIf=\"!(step == 1)\"><img src=\"assets/images/HeadGrey.png\" alt=\"\"></li>\r\n                 <li><p style=\"margin-top:4px !important;\">Step 1: <span>Complete the form</span></p></li>\r\n               </ul>\r\n             </div>\r\n           </div>\r\n           <div class=\"Coloumn-gap\">\r\n             <div class=\"steps-details\">\r\n               <ul>\r\n                 <li *ngIf=\"!(step == 2)\"><img src=\"assets/images/link_icon_grey.png\" alt=\"\"></li>\r\n                 <li *ngIf=\"(step == 2)\"><img src=\"assets/images/link_icon_blue.png\" alt=\"\"></li> \r\n                 <li><p style=\"margin-top:4px !important;\">Step 2: <span>Save and Veiw Data</span></p></li>\r\n               </ul>\r\n             </div>\r\n           </div>\r\n         </div>\r\n         <div *ngIf=\"step == 1\">\r\n         <div class=\"step-1-section\">\r\n           <h2>Fill Your Details</h2>\r\n           <div class=\"step-form-information\">\r\n             <div class=\"row\">\r\n               <div class=\"col-md-6 col-sm-6\">\r\n                 <form class=\"w_60\" #user=\"ngForm\" (ngSubmit)=\"register(user)\" >\r\n                   <div class=\"form-group\">\r\n                     <label>First Name</label>\r\n                     <!-- <input type=\"text\" class=\"form-control custom-idea\"> -->\r\n                     <input ngModel #firstName=\"ngModel\" required  class=\"form-control\" type=\"text\" name=\"firstName\" placeholder=\"First Name\" pattern=\"[a-zA-Z][a-zA-Z ]+\">\r\n                     <p class=\"text-danger\" *ngIf=\"!firstName.valid && user.submitted\">\r\n                       <span class=\"d-block text-left mt-1 ml-1 small text-danger\" *ngIf=\"firstName.errors.required\">First Name is required!</span>\r\n                       <span class=\"d-block text-left mt-1 ml-1 small text-danger\" *ngIf=\"firstName.errors.pattern\">Please enter a valid Name.</span>\r\n                     </p>\r\n                   </div>\r\n                   <div class=\"form-group\">\r\n                     <label>Last Name</label>\r\n                     <!-- <input type=\"text\" class=\"form-control custom-idea\"> -->\r\n                     <input ngModel #lastName=\"ngModel\" required  class=\"form-control\" type=\"text\" name=\"lastName\" placeholder=\"Last Name\" pattern=\"[a-zA-Z][a-zA-Z ]+\">\r\n                     <p class=\"text-danger\" *ngIf=\"!lastName.valid && user.submitted\">\r\n                       <span class=\"d-block text-left mt-1 ml-1 small text-danger\" *ngIf=\"lastName.errors.required\">Last Name is required!</span>\r\n                       <span class=\"d-block text-left mt-1 ml-1 small text-danger\" *ngIf=\"lastName.errors.pattern\">Please enter a valid last name.</span>\r\n                     </p>\r\n                   </div>\r\n                   <div class=\"form-group\">\r\n                     <label>Email</label>\r\n                     <!-- <input type=\"text\" class=\"form-control custom-idea\"> -->\r\n                     <input ngModel #email=\"ngModel\" required  class=\"form-control\" type=\"email\" name=\"email\" placeholder=\"Email\" pattern=\"^[_a-z0-9]+(\\.[_a-z0-9]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,4})$\">\r\n                     <p class=\"text-danger\" *ngIf=\"!email.valid && user.submitted\">\r\n                       <span class=\"d-block text-left mt-1 ml-1 small text-danger\" *ngIf=\"email.errors.required\">Email is required!</span>\r\n                       <span class=\"d-block text-left mt-1 ml-1 small text-danger\" *ngIf=\"email.errors.pattern\">Please enter a valid email address.</span>\r\n                     </p>\r\n                   </div>\r\n\r\n                   <div class=\"form-group\">\r\n                     <label>Date Of Birth</label>\r\n                    <div class=\"input-group\">\r\n                      <input class=\"form-control\" placeholder=\"yyyy-mm-dd\"\r\n                             name=\"dp\" ngModel ngbDatepicker #d=\"ngbDatepicker\" #dp=\"ngModel\" required>\r\n                      <div class=\"input-group-append\">\r\n                        <button class=\"btn btn-outline-secondary calendar\" (click)=\"d.toggle()\" type=\"button\"></button>\r\n                      </div>\r\n                    </div>\r\n                    <p class=\"text-danger\" *ngIf=\"!dp.valid && user.submitted\">\r\n                      <span class=\"d-block text-left mt-1 ml-1 small text-danger\" *ngIf=\"dp.errors.required\">Date of Birth is required!</span>\r\n                    </p>\r\n                    <p class=\"text-danger\" *ngIf=\"ageRes\">\r\n                      <span class=\"d-block text-left mt-1 ml-1 small text-danger\" >For further proceeding age should be above 18 years !</span>\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div class=\"form-group\">\r\n                    <label>Phone Number </label>\r\n                    <!-- <input type=\"text\" class=\"form-control custom-idea\"> -->\r\n                    <input ngModel #phone=\"ngModel\" required  class=\"form-control\" type=\"text\" name=\"phone\" placeholder=\"Number\" required>\r\n                    <p class=\"text-danger\" *ngIf=\"!phone.valid && user.submitted\">\r\n                      <span class=\"d-block text-left mt-1 ml-1 small text-danger\" *ngIf=\"phone.errors.required\">Phone Number is required!</span>\r\n                    </p>\r\n                    <p class=\"text-danger\" *ngIf=\"!phoneState\">\r\n                      <span class=\"d-block text-left mt-1 ml-1 small text-danger\">Phone Number is required with 10 digits only no spaces!</span>\r\n                    </p>\r\n                  </div>\r\n\r\n                   <button type=\"submit\" class=\"button btn-steps\">Continue</button>\r\n                 </form>\r\n                 \r\n               </div>\r\n               <div class=\"col-md-6 col-sm-6\">\r\n                 <div class=\"free-points\">\r\n                   <h2>You’ll love Offorms</h2>\r\n                   <div class=\"free\">\r\n                     <p><a>Free</a> for developers</p>\r\n                   </div>\r\n                   <ul class=\"list\">\r\n                     <li><span>✓</span> Your data is safe</li>\r\n                     <li><span>✓</span> Build better understanding</li>\r\n                     <li><span>✓</span> Showcase all your skills</li>\r\n                   </ul>\r\n                 </div>\r\n               </div>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n       <div *ngIf=\"step == 2\">\r\n        <div class=\"step-2-section\">\r\n           <h2>Data provided by you with us is following:</h2>\r\n           <p>First Name : {{userDetails.user.firstName}} </p>\r\n           <p>Last Name : {{userDetails.user.lastName}} </p>\r\n           <p>E-Mail Adress : {{userDetails.user.email}} </p>\r\n           <p>Phone Number : {{userDetails.user.phone}}</p>\r\n           <p>Date Of Birth : {{userDetails.user.dp.day+'-'+userDetails.user.dp.month+'-'+userDetails.user.dp.year}}</p>\r\n        </div>\r\n\r\n        <div class=\"step-2-section\">\r\n          <h2>All Form Data : </h2>\r\n          <div class=\"allData\" *ngFor=\"let data of completeData\">\r\n          <p>First Name : {{data.firstName}} </p>\r\n          <p>Last Name : {{data.lastName}} </p>\r\n          <p>E-Mail Adress : {{data.email}} </p>\r\n          <p>Phone Number : {{data.phone}}</p>\r\n          <p>Date Of Birth : {{data.dp.day+'-'+data.dp.month+'-'+data.dp.year}}</p>\r\n          </div>\r\n       </div>\r\n           </div>\r\n           \r\n       </div>\r\n           \r\n         </div>\r\n       </div>\r\n     </div>\r\n     \r\n   ","import { NgForm } from '@angular/forms';\r\nimport { Router } from \"@angular/router\";\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { RegistrationService } from '../Services/registration/registration.service'\r\nimport { CommonModule } from '@angular/common';  \r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { ApiparserService } from '../Services/apiparser/apiparser.service';\r\n\r\n@Component({\r\n  selector: 'app-main-module',\r\n  templateUrl: './main-module.component.html',\r\n  styleUrls: ['./main-module.component.scss']\r\n})\r\nexport class MainModuleComponent implements OnInit {\r\n  public step = 1;\r\n  public looper = [1];\r\n  public counter = 1;\r\n  public userDetails;\r\n  public phoneState = true;\r\n  public ageRes = false;\r\n  public completeData : any;\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private RegistrationService: RegistrationService,\r\n    private ApiParser : ApiparserService\r\n    ){}\r\n    async fetchData(){\r\n        let data = await this.ApiParser.hit('/user/data', 'get', {});\r\n        return data;\r\n    }\r\n\r\n    async register(user : NgForm){\r\n      if(!user || !user.valid) return;\r\n      var userToSend ={\r\n        user:user.form.value\r\n      }\r\n      var dob = new Date(user.form.value.dp.year , user.form.value.dp.month , user.form.value.dp.day);\r\n      var today = new Date();\r\n      var age = today.getFullYear() - dob.getFullYear();\r\n      var month = today.getMonth(); - dob.getMonth();\r\n      if(month < 0 || (month === 0 && (today.getDate() < dob.getDate()) )){\r\n        --age;\r\n      }\r\n      if(age < 18 ){\r\n        this.ageRes = true;\r\n        return 0;\r\n      }\r\n      else {\r\n        this.ageRes = false;\r\n      console.log(userToSend);\r\n      this.RegistrationService.register(userToSend).then(async (result:any)=>{\r\n        if(result[0] === 'sucess'){\r\n          this.userDetails=userToSend;\r\n          console.log(this.userDetails);\r\n          this.step = 2; \r\n          this.completeData = await this.fetchData();\r\n          \r\n        }\r\n        if(result[0] === 'Incomplete'){\r\n          this.phoneState = false;\r\n        }\r\n      }).catch((err)=>{\r\n        err = err || new Object();\r\n      });\r\n    }\r\n  }\r\n    continue(){\r\n      this.step = this.step + 1;\r\n    }\r\n    adder()\r\n    {\r\n      this.counter = this.counter+1;\r\n      this.looper.push(this.counter);\r\n    }\r\n\r\n  ngOnInit() {}\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule }   from '@angular/forms';\nimport { MainModuleRoutingModule } from \"./main-module.routing\"\nimport { MainModuleComponent } from './main-module.component';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [MainModuleComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    MainModuleRoutingModule,\n    NgbModule\n  ]\n})\nexport class MainModuleModule { }\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MainModuleComponent } from './main-module.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '',  component: MainModuleComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class MainModuleRoutingModule { }","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"footer-class\">\n  <div class=\"footer-logo\">\n    <a href=\"#\"><img src=\"assets/images/logo-new.png\"></a>\n  </div>\n  <hr>\n  <span class=\"copy-text\">&copy; Copyright 2020, Offorms. All rights reserved.</span>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\npublic loggedIn:any=false;\n  constructor(\n      private router: Router,\n\n  ) { }\n\n  home(){\n    this.router.navigate(['']);\n  }\n  ngOnInit() {\n\n  }\n\n}\n","<div class=\"header-class\">\n  <div class=\"header-logo\">\n    <a (click)=\"home()\"><img src=\"assets/images/logo-new.png\"></a>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}